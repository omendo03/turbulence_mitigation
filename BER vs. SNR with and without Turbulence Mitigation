% MATLAB Code for BER vs. SNR with and without Turbulence Mitigation
% Including Kolmogorov turbulence and adaptive optics (AO) and water-filling algorithm

% Parameters
SNR = linspace(0, 40, 100);   % SNR from 0 to 40 dB
C_n2 = 1e-13;                 % Refractive index structure parameter for turbulence
L = 500;                      % Path length in meters
wavelength = 532e-9;          % Optical wavelength in meters
k = 2*pi / wavelength;        % Wavenumber
sigma_R2 = 1.23 * C_n2 * k^(7/6) * L^(11/6);  % Rytov variance for turbulence strength

% BER without AO (no turbulence mitigation)
BER_no_mitigation = qfunc(sqrt(2*SNR));  % BER without AO (simple case)

% BER with AO (turbulence mitigation using AO)
% Mitigate phase distortions by clamping the turbulence effect
SNR_with_mitigation = max(0, SNR - sigma_R2);  % Reducing turbulence effects with AO
BER_with_mitigation = qfunc(sqrt(2*SNR_with_mitigation));  % BER with AO

% Dynamic Power Allocation using Water-Filling Algorithm (not explicitly included in this simulation)

% Plot results
figure;
semilogy(SNR, BER_no_mitigation, 'r-', 'LineWidth', 2); % Without Mitigation
hold on;
semilogy(SNR, BER_with_mitigation, 'b-', 'LineWidth', 2); % With Mitigation (AO applied)
xlabel('SNR (dB)');
ylabel('BER');
title('BER vs. SNR with and without Turbulence Mitigation');
legend('Without Turbulence Mitigation', 'With Turbulence Mitigation (AO applied)');
grid on;
